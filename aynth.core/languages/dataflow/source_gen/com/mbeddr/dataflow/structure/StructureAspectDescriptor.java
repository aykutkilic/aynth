package com.mbeddr.dataflow.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.CompiledConceptDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  private static String[] stringSwitchCases_1htk8d_a0a0a = new String[]{"com.mbeddr.dataflow.structure.DataflowContext", "com.mbeddr.dataflow.structure.DataflowPin", "com.mbeddr.dataflow.structure.DataflowProcessor", "com.mbeddr.dataflow.structure.DataflowRouting"};

  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {
      case 0:
        return new CompiledConceptDescriptor("com.mbeddr.dataflow.structure.DataflowContext", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "com.mbeddr.core.modules.structure.IModuleContent"}, new String[]{"type"}, new String[]{});
      case 1:
        return new CompiledConceptDescriptor("com.mbeddr.dataflow.structure.DataflowPin", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "com.mbeddr.ext.components.structure.IComponentContent", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{"type"}, new String[]{"context"});
      case 2:
        return new CompiledConceptDescriptor("com.mbeddr.dataflow.structure.DataflowProcessor", "jetbrains.mps.lang.core.structure.BaseConcept", false, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "com.mbeddr.core.modules.structure.IModuleContent"}, new String[]{}, new String[]{});
      case 3:
        return new CompiledConceptDescriptor("com.mbeddr.dataflow.structure.DataflowRouting", "com.mbeddr.core.statements.structure.Statement", false, new String[]{"com.mbeddr.core.statements.structure.Statement"}, new String[]{"action"}, new String[]{"fromPin", "toPin"});
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }
}
